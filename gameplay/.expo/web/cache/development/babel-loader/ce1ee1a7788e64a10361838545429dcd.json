{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nailtonjunior/rock/gameplay/src/screens/Home/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { CategorySelect } from \"../../components/CategorySelect\";\nimport { Appointment } from \"../../components/Appointment\";\nimport { ListDivider } from \"../../components/ListDivider\";\nimport { ListHeader } from \"../../components/ListHeader\";\nimport { Background } from \"../../components/Background\";\nimport { ButtonAdd } from \"../../components/ButtonAdd\";\nimport { Profile } from \"../../components/Profile\";\nimport { Load } from \"../../components/Load\";\nimport { styles } from \"./styles\";\nimport { COLLECTION_APPOINTMENTS } from \"../../configs/database\";\nexport function Home() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      appointments = _useState6[0],\n      setAppointments = _useState6[1];\n\n  var navigation = useNavigation();\n\n  function handleCategorySelect(categoryId) {\n    categoryId === category ? setCategory('') : setCategory(categoryId);\n  }\n\n  function handleAppointmentDetails(guildSelected) {\n    navigation.navigate('AppointmentDetails', {\n      guildSelected: guildSelected\n    });\n  }\n\n  function handleAppointmentCreate() {\n    navigation.navigate('AppointmentCreate');\n  }\n\n  function loadAppointments() {\n    var response, storage;\n    return _regeneratorRuntime.async(function loadAppointments$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(COLLECTION_APPOINTMENTS));\n\n          case 2:\n            response = _context.sent;\n            storage = response ? JSON.parse(response) : [];\n\n            if (category) {\n              setAppointments(storage.filter(function (item) {\n                return item.category === category;\n              }));\n            } else {\n              setAppointments(storage);\n            }\n\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useFocusEffect(useCallback(function () {\n    loadAppointments();\n  }, [category]));\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonAdd, {\n    onPress: handleAppointmentCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(CategorySelect, {\n    categorySelected: category,\n    setCategory: handleCategorySelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), loading ? React.createElement(Load, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(ListHeader, {\n    title: \"Partidas agendadas\",\n    subtitle: \"Total \" + appointments.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: appointments,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Appointment, {\n        data: item,\n        onPress: function onPress() {\n          return handleAppointmentDetails(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ListDivider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      });\n    },\n    contentContainerStyle: {\n      paddingBottom: 69\n    },\n    style: styles.matches,\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/nailtonjunior/rock/gameplay/src/screens/Home/index.tsx"],"names":["React","useState","useCallback","useNavigation","useFocusEffect","AsyncStorage","CategorySelect","Appointment","ListDivider","ListHeader","Background","ButtonAdd","Profile","Load","styles","COLLECTION_APPOINTMENTS","Home","category","setCategory","loading","setLoading","appointments","setAppointments","navigation","handleCategorySelect","categoryId","handleAppointmentDetails","guildSelected","navigate","handleAppointmentCreate","loadAppointments","getItem","response","storage","JSON","parse","filter","item","header","length","id","paddingBottom","matches"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { CategorySelect } from '../../components/CategorySelect';\nimport { Appointment, AppointmentProps } from '../../components/Appointment';\nimport { ListDivider } from '../../components/ListDivider';\nimport { ListHeader } from '../../components/ListHeader';\nimport { Background } from '../../components/Background';\nimport { ButtonAdd } from '../../components/ButtonAdd';\nimport { Profile } from '../../components/Profile';\nimport { Load } from '../../components/Load';\n\nimport { styles } from './styles';\nimport { COLLECTION_APPOINTMENTS } from '../../configs/database';\n\nexport function Home() {\n  const [category, setCategory] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [appointments, setAppointments] = useState<AppointmentProps[]>([]);\n\n  const navigation = useNavigation();\n\n\n  function handleCategorySelect(categoryId: string) {\n    categoryId === category ? setCategory('') : setCategory(categoryId);\n  } \n  \n  function handleAppointmentDetails(guildSelected: AppointmentProps) {\n    navigation.navigate('AppointmentDetails', { guildSelected });\n  } \n  \n  function handleAppointmentCreate() {\n    navigation.navigate('AppointmentCreate');\n  } \n  \n  async function loadAppointments() {\n    const response = await AsyncStorage.getItem(COLLECTION_APPOINTMENTS);\n    const storage: AppointmentProps[] = response ? JSON.parse(response) : [];\n\n    if(category){\n      setAppointments(storage.filter(item => item.category === category));\n    }else{\n      setAppointments(storage)\n    }\n    \n    setLoading(false);\n  }\n\n  useFocusEffect(useCallback(() => {\n    loadAppointments();\n  },[category]));\n\n  return (\n    <Background>\n      <View style={styles.header}>\n        <Profile />\n        <ButtonAdd onPress={handleAppointmentCreate}/>\n      </View>\n    \n      <CategorySelect \n        categorySelected={category}\n        setCategory={handleCategorySelect}\n      />\n    \n    {\n      loading ? <Load /> :\n      <>\n        <ListHeader \n          title=\"Partidas agendadas\"\n          subtitle={`Total ${appointments.length}`}\n        />\n\n        <FlatList \n          data={appointments}\n          keyExtractor={item => item.id}\n          renderItem={({ item }) => (\n            <Appointment \n              data={item} \n              onPress={() => handleAppointmentDetails(item)}\n            />            \n          )}\n          ItemSeparatorComponent={() => <ListDivider />}\n          contentContainerStyle={{ paddingBottom: 69 }}\n          style={styles.matches}\n          showsVerticalScrollIndicator={false}\n        />\n      </>\n      }\n    </Background>\n  );  \n}"]},"metadata":{},"sourceType":"module"}