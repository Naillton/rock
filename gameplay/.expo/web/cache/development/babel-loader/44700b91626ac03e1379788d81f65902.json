{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nailtonjunior/rock/gameplay/src/screens/AppointmentCreate/index.tsx\";\nimport React, { useState } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { theme } from \"../../global/styles/theme\";\nimport { styles } from \"./styles\";\nimport { CategorySelect } from \"../../components/CategorySelect\";\nimport { ModalView } from \"../../components/ModalView\";\nimport { Background } from \"../../components/Background\";\nimport { SmallInput } from \"../../components/SmallInput\";\nimport { GuildIcon } from \"../../components/GuildIcon\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { Header } from \"../../components/Header\";\nimport { Button } from \"../../components/Button\";\nimport { Guilds } from \"../Guilds\";\nexport function AppointmentCreate() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openGuildsModa = _useState4[0],\n      setOpenGuildsModal = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      guild = _useState6[0],\n      setGuild = _useState6[1];\n\n  var navigation = useNavigation();\n\n  function handleOpenGuilds() {\n    setOpenGuildsModal(true);\n  }\n\n  function handleCloseGuilds() {\n    setOpenGuildsModal(false);\n  }\n\n  function handleGuildSelect(guildSelect) {\n    setGuild(guildSelect);\n    setOpenGuildsModal(false);\n  }\n\n  function handleCategorySelect(categoryId) {\n    setCategory(categoryId);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    title: \"Agendar partida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: [styles.label, {\n      marginLeft: 24,\n      marginTop: 36,\n      marginBottom: 18\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Categoria\"), React.createElement(CategorySelect, {\n    hasCheckBox: true,\n    setCategory: handleCategorySelect,\n    categorySelected: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(RectButton, {\n    onPress: handleOpenGuilds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, guild.icon ? React.createElement(GuildIcon, {\n    guildId: guild.id,\n    iconId: guild.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }) : React.createElement(View, {\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.selectBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, guild.name ? guild.name : 'Selecione um servidor')), React.createElement(Feather, {\n    name: \"chevron-right\",\n    color: theme.colors.heading,\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      marginBottom: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Dia e m\\xEAs\"), React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, React.createElement(SmallInput, {\n    maxLength: 2,\n    onChangeText: setDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"/\"), React.createElement(SmallInput, {\n    maxLength: 2,\n    onChangeText: setMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      marginBottom: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Hora e minuto\"), React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, React.createElement(SmallInput, {\n    maxLength: 2,\n    onChangeText: setHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \":\"), React.createElement(SmallInput, {\n    maxLength: 2,\n    onChangeText: setMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  })))), React.createElement(View, {\n    style: [styles.field, {\n      marginBottom: 12\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Descri\\xE7\\xE3o\"), React.createElement(Text, {\n    style: styles.caracteresLimit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Max 100 caracteres\")), React.createElement(TextArea, {\n    multiline: true,\n    maxLength: 100,\n    numberOfLines: 5,\n    autoCorrect: false,\n    onChangeText: setDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Agendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }))))), React.createElement(ModalView, {\n    visible: openGuildsModa,\n    closeModal: handleCloseGuilds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(Guilds, {\n    handleGuildSelect: handleGuildSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/nailtonjunior/rock/gameplay/src/screens/AppointmentCreate/index.tsx"],"names":["React","useState","Feather","RectButton","useNavigation","theme","styles","CategorySelect","ModalView","Background","SmallInput","GuildIcon","TextArea","Header","Button","Guilds","AppointmentCreate","category","setCategory","openGuildsModa","setOpenGuildsModal","guild","setGuild","navigation","handleOpenGuilds","handleCloseGuilds","handleGuildSelect","guildSelect","handleCategorySelect","categoryId","Platform","OS","container","label","marginLeft","marginTop","marginBottom","form","select","icon","id","image","selectBody","name","colors","heading","field","column","setDay","divider","setMonth","setHour","setMinute","caracteresLimit","setDescription","footer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { RectButton } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport uuid from 'react-native-uuid';\n\nimport {\n  Text,\n  View,\n  Platform,\n  ScrollView,\n  KeyboardAvoidingView,\n} from 'react-native';\n\nimport { COLLECTION_APPOINTMENTS } from '../../configs/database';\nimport { theme } from '../../global/styles/theme';\nimport { styles } from './styles';\n\nimport { CategorySelect } from '../../components/CategorySelect';\nimport { ModalView } from '../../components/ModalView';\nimport { Background } from '../../components/Background';\nimport { SmallInput } from '../../components/SmallInput';\nimport { GuildIcon } from '../../components/GuildIcon';\nimport { TextArea } from '../../components/TextArea';\nimport { GuildProps } from '../../components/Guild';\nimport { Header } from '../../components/Header';\nimport { Button } from '../../components/Button';\nimport { Guilds } from '../Guilds';\n\n\nexport function AppointmentCreate(){\n  const [category, setCategory] = useState('');\n  const [openGuildsModa, setOpenGuildsModal] = useState(false);\n  const [guild, setGuild] = useState<GuildProps>({} as GuildProps);\n\n  const navigation = useNavigation();\n\n  function handleOpenGuilds(){\n    setOpenGuildsModal(true);\n  }\n\n  function handleCloseGuilds(){\n    setOpenGuildsModal(false);\n  }\n\n  function handleGuildSelect(guildSelect: GuildProps){\n    setGuild(guildSelect);\n    setOpenGuildsModal(false);\n  }\n\n  function handleCategorySelect(categoryId: string) {\n    setCategory(categoryId);\n  }\n\n  return (\n    <KeyboardAvoidingView \n      behavior={Platform.OS === 'ios' ? 'padding' : 'height' }\n      style={styles.container}\n    >\n      <Background>\n        <ScrollView>  \n          <Header \n            title=\"Agendar partida\"\n          />\n\n          <Text style={[\n            styles.label, \n            { marginLeft: 24, marginTop: 36, marginBottom: 18 }]}\n          >\n            Categoria\n          </Text>\n\n          <CategorySelect \n            hasCheckBox\n            setCategory={handleCategorySelect}\n            categorySelected={category}\n          />\n\n          <View style={styles.form}>\n            <RectButton onPress={handleOpenGuilds}>\n              <View style={styles.select}>\n                {\n                  guild.icon \n                  ? <GuildIcon guildId={guild.id} iconId={guild.icon} /> \n                  : <View style={styles.image} />\n                }\n\n                <View style={styles.selectBody}>\n                  <Text style={styles.label}>\n                    { \n                      guild.name \n                      ? guild.name \n                      : 'Selecione um servidor' \n                    }\n                  </Text>\n                </View>\n\n                <Feather \n                  name=\"chevron-right\"\n                  color={theme.colors.heading}\n                  size={18}\n                />\n              </View>\n            </RectButton>\n            \n            <View style={styles.field}>\n              <View>\n                <Text style={[styles.label, { marginBottom: 12 } ]}>\n                  Dia e mês\n                </Text>\n\n                <View style={styles.column}>\n                  <SmallInput \n                    maxLength={2} \n                    onChangeText={setDay}\n                  />\n                  <Text style={styles.divider}>\n                    /\n                  </Text>\n                  <SmallInput \n                    maxLength={2} \n                    onChangeText={setMonth}\n                  />\n                </View>\n              </View>\n\n              <View>\n                <Text style={[styles.label, { marginBottom: 12 } ]}>\n                  Hora e minuto\n                </Text>\n\n                <View style={styles.column}>\n                  <SmallInput \n                    maxLength={2} \n                    onChangeText={setHour}\n                  />\n                  <Text style={styles.divider}>\n                    :\n                  </Text>\n                  <SmallInput \n                    maxLength={2} \n                    onChangeText={setMinute}\n                  />\n                </View>\n              </View>           \n            </View>\n\n            <View style={[styles.field, { marginBottom: 12 }]}>\n              <Text style={styles.label}>\n                Descrição\n              </Text>\n\n              <Text style={styles.caracteresLimit}>\n                Max 100 caracteres\n              </Text>\n            </View>\n\n            <TextArea \n              multiline\n              maxLength={100}\n              numberOfLines={5}\n              autoCorrect={false}\n              onChangeText={setDescription}\n            />\n\n            <View style={styles.footer}>\n              <Button \n                title=\"Agendar\"\n              />\n            </View>\n          </View>\n        </ScrollView>\n      </Background>\n\n      <ModalView visible={openGuildsModa} closeModal={handleCloseGuilds}>\n        <Guilds handleGuildSelect={handleGuildSelect}/>\n      </ModalView>\n      \n    </KeyboardAvoidingView>\n  );\n}"]},"metadata":{},"sourceType":"module"}