{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nailtonjunior/rock/gameplay/src/hooks/auth.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, createContext } from \"react\";\nimport * as AuthSession from 'expo-auth-session';\nimport { SCOPE, CLIENT_ID, REDIRECT_URI, RESPONSE_TYPE } from \"../configs\";\nimport { api } from \"../services/api\";\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function signIn() {\n    var authUrl, response;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            authUrl = api.defaults.baseURL + \"/oauth2/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT_URI + \"&response_type=\" + RESPONSE_TYPE + \"&scope=\" + SCOPE;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AuthSession.startAsync({\n              authUrl: authUrl\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error('Não foi possivel autenticar');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      signIn: signIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/nailtonjunior/rock/gameplay/src/hooks/auth.tsx"],"names":["React","useState","useContext","createContext","AuthSession","SCOPE","CLIENT_ID","REDIRECT_URI","RESPONSE_TYPE","api","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","signIn","authUrl","defaults","baseURL","startAsync","response","console","log","Error","useAuth","context"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,aAHF,QAKO,OALP;AAOA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,SACEC,KADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,aAJF;AAQA,SAASC,GAAT;AAoBA,OAAO,IAAMC,WAAW,GAAGP,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASQ,YAAT,OAAuD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;;AACrD,kBAAwBX,QAAQ,CAAO,EAAP,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA+Bb,QAAQ,CAAC,KAAD,CAAvC;AAAA;AAAA,MAAQc,OAAR;AAAA,MAAiBC,UAAjB;;AAEA,WAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEID,YAAAA,UAAU,CAAC,IAAD,CAAV;AAEME,YAAAA,OAJV,GAIuBT,GAAG,CAACU,QAAJ,CAAaC,OAJpC,oCAI0Ed,SAJ1E,sBAIoGC,YAJpG,uBAIkIC,aAJlI,eAIyJH,KAJzJ;AAAA;AAAA,6CAM2BD,WAAW,CAACiB,UAAZ,CAAuB;AAAEH,cAAAA,OAAO,EAAPA;AAAF,aAAvB,CAN3B;;AAAA;AAMUI,YAAAA,QANV;AAOIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAPJ;AAAA;;AAAA;AAAA;AAAA;AAAA,kBASU,IAAIG,KAAJ,CAAU,6BAAV,CATV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,MAAM,EAANA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD;;AAED,SAASc,OAAT,GAAmB;AACjB,MAAMC,OAAO,GAAGzB,UAAU,CAACQ,WAAD,CAA1B;AAEE,SAAOiB,OAAP;AACH;;AAED,SAAShB,YAAT,EAAuBe,OAAvB","sourcesContent":["import React, {\n  useState,\n  useContext,\n  createContext,\n  ReactNode,\n} from \"react\";\n\nimport * as AuthSession from 'expo-auth-session';\n\nimport { \n  SCOPE,\n  CLIENT_ID,\n  REDIRECT_URI,\n  RESPONSE_TYPE,\n  CDN_IMAGE,\n} from '../configs';\n\nimport { api } from '../services/api';\n\ntype User = {\n  id: string;\n  username: string;\n  firstName: string;\n  avatar: string;\n  email: string;\n  token: string;\n}\n\ntype AuthContextData = {\n  user: User;\n  signIn: () => Promise<void>;\n}\n\ntype AuthProviderProps = { \n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextData);\n\nfunction AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User>({} as User);\n  const [ loading, setLoading] = useState(false);\n\n  async function signIn(){\n    try{\n      setLoading(true);\n\n      const authUrl = `${api.defaults.baseURL}/oauth2/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${SCOPE}`;\n      \n      const response = await AuthSession.startAsync({ authUrl });\n      console.log(response);\n    }catch {\n      throw new Error('Não foi possivel autenticar');\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  \n    return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}